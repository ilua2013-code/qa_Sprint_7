{"uid":"8c4156def0ffcf1a","name":"test_accept_order_with_invalid_order_id","fullName":"tests.test_return_order.TestCreatingCourier#test_accept_order_with_invalid_order_id","historyId":"1bd189952c0252c23aef0c5313ee5ffa","time":{"start":1760439191097,"stop":1760439191486,"duration":389},"status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\": \"Заказа с таким id не существует\"}, но получили {'code': 404, 'message': 'Заказа с таким id не существует'}\nassert {'code': 404,...е существует'} == {'message': '...е существует'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m404\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show","statusTrace":"self = <test_return_order.TestCreatingCourier object at 0x000001D650ECA210>, prepared_courier = 629406\n\n    def test_accept_order_with_invalid_order_id(self, prepared_courier):\n        with allure.step(\"Принять заказ с неверным id заказа\"):\n            resp = requests.put(f'{Url.url}{Url.put_order}/888888?courierId={prepared_courier}')  # Неверный ID заказа\n    \n            assert resp.status_code == 404, f\"Ожидался статус 404, но получили {resp.status_code}\"\n>           assert resp.json() == {\"message\": \"Заказа с таким id не существует\"}, \\\n        f'Ожидался ответ {{\"message\": \"Заказа с таким id не существует\"}}, но получили {resp.json()}'\nE           AssertionError: Ожидался ответ {\"message\": \"Заказа с таким id не существует\"}, но получили {'code': 404, 'message': 'Заказа с таким id не существует'}\nE           assert {'code': 404,...е существует'} == {'message': '...е существует'}\nE             \nE             Omitting 1 identical items, use -vv to show\nE             Left contains 1 more item:\nE             \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m404\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\nE             \nE             Full diff:\nE             \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\nE             \nE             ...Full output truncated (3 lines hidden), use '-vv' to show\n\ntests\\test_return_order.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760438909140,"stop":1760438909179,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"post_cour","time":{"start":1760439190155,"stop":1760439190155,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"prepared_courier","time":{"start":1760439190155,"stop":1760439191096,"duration":941},"status":"passed","steps":[{"name":"Создаем тестового курьера","time":{"start":1760439190155,"stop":1760439191094,"duration":939},"status":"passed","steps":[{"name":"Создаем курьера","time":{"start":1760439190155,"stop":1760439190565,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"Получаем ID курьера через авторизацию","time":{"start":1760439190565,"stop":1760439191093,"duration":528},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":2}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":3},{"name":"create_cour","time":{"start":1760439190155,"stop":1760439190155,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\": \"Заказа с таким id не существует\"}, но получили {'code': 404, 'message': 'Заказа с таким id не существует'}\nassert {'code': 404,...е существует'} == {'message': '...е существует'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m404\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show","statusTrace":"self = <test_return_order.TestCreatingCourier object at 0x000001D650ECA210>, prepared_courier = 629406\n\n    def test_accept_order_with_invalid_order_id(self, prepared_courier):\n        with allure.step(\"Принять заказ с неверным id заказа\"):\n            resp = requests.put(f'{Url.url}{Url.put_order}/888888?courierId={prepared_courier}')  # Неверный ID заказа\n    \n            assert resp.status_code == 404, f\"Ожидался статус 404, но получили {resp.status_code}\"\n>           assert resp.json() == {\"message\": \"Заказа с таким id не существует\"}, \\\n        f'Ожидался ответ {{\"message\": \"Заказа с таким id не существует\"}}, но получили {resp.json()}'\nE           AssertionError: Ожидался ответ {\"message\": \"Заказа с таким id не существует\"}, но получили {'code': 404, 'message': 'Заказа с таким id не существует'}\nE           assert {'code': 404,...е существует'} == {'message': '...е существует'}\nE             \nE             Omitting 1 identical items, use -vv to show\nE             Left contains 1 more item:\nE             \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m404\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\nE             \nE             Full diff:\nE             \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\nE             \nE             ...Full output truncated (3 lines hidden), use '-vv' to show\n\ntests\\test_return_order.py:47: AssertionError","steps":[{"name":"Принять заказ с неверным id заказа","time":{"start":1760439191097,"stop":1760439191485,"duration":388},"status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\": \"Заказа с таким id не существует\"}, но получили {'code': 404, 'message': 'Заказа с таким id не существует'}\nassert {'code': 404,...е существует'} == {'message': '...е существует'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m404\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show\n","statusTrace":"  File \"C:\\Users\\ilua2\\project\\qa_Sprint_7\\tests\\test_return_order.py\", line 47, in test_accept_order_with_invalid_order_id\n        assert resp.json() == {\"message\": \"Заказа с таким id не существует\"}, \\\n    f'Ожидался ответ {{\"message\": \"Заказа с таким id не существует\"}}, но получили {resp.json()}'\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":1},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_return_order"},{"name":"subSuite","value":"TestCreatingCourier"},{"name":"host","value":"Ilya_Volkov"},{"name":"thread","value":"5776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_return_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"8c4156def0ffcf1a.json","parameterValues":[]}