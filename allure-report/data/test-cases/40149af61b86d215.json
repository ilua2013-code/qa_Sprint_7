{"uid":"40149af61b86d215","name":"Получение заказа без номера","fullName":"tests.test_place_an_order_using_its_number.TestCreatingCourier#test_get_order_with_empty_track_number","historyId":"c90aa4c6d9db3a4edb38a74a45d46a93","time":{"start":1760439182397,"stop":1760439182882,"duration":485},"description":"Запрос заказа без номера трека возвращает ошибку","descriptionHtml":"<p>Запрос заказа без номера трека возвращает ошибку</p>\n","status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\":  \"Недостаточно данных для поиска\"}, но получили {'code': 400, 'message': 'Недостаточно данных для поиска'}\nassert {'code': 400,...х для поиска'} == {'message': '...х для поиска'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m400\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show","statusTrace":"self = <test_place_an_order_using_its_number.TestCreatingCourier object at 0x000001D650EA1950>\nget_track_order = <function get_track_order.<locals>.get_order at 0x000001D650FF7380>\n\n    @allure.title('Получение заказа без номера')\n    @allure.description('Запрос заказа без номера трека возвращает ошибку')\n    def test_get_order_with_empty_track_number(self, get_track_order):\n        with allure.step(\"Запрос без номера возвращает ошибку\"):\n            create_order_response = get_track_order('')\n            assert create_order_response.status_code == 400, (\n                f\"Ожидался статус код 400, но получили {create_order_response.status_code}. \"\n                f\"Ответ: {create_order_response.text}\")\n>           assert create_order_response.json() == {\"message\":  \"Недостаточно данных для поиска\"}, (\n            f'Ожидался ответ {{\"message\":  \"Недостаточно данных для поиска\"}}, '\n            f'но получили {create_order_response.json()}')\nE           AssertionError: Ожидался ответ {\"message\":  \"Недостаточно данных для поиска\"}, но получили {'code': 400, 'message': 'Недостаточно данных для поиска'}\nE           assert {'code': 400,...х для поиска'} == {'message': '...х для поиска'}\nE             \nE             Omitting 1 identical items, use -vv to show\nE             Left contains 1 more item:\nE             \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m400\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\nE             \nE             Full diff:\nE             \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\nE             \nE             ...Full output truncated (3 lines hidden), use '-vv' to show\n\ntests\\test_place_an_order_using_its_number.py:35: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760438909140,"stop":1760438909179,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"get_track_order","time":{"start":1760439182396,"stop":1760439182396,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"testStage":{"description":"Запрос заказа без номера трека возвращает ошибку","status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\":  \"Недостаточно данных для поиска\"}, но получили {'code': 400, 'message': 'Недостаточно данных для поиска'}\nassert {'code': 400,...х для поиска'} == {'message': '...х для поиска'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m400\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show","statusTrace":"self = <test_place_an_order_using_its_number.TestCreatingCourier object at 0x000001D650EA1950>\nget_track_order = <function get_track_order.<locals>.get_order at 0x000001D650FF7380>\n\n    @allure.title('Получение заказа без номера')\n    @allure.description('Запрос заказа без номера трека возвращает ошибку')\n    def test_get_order_with_empty_track_number(self, get_track_order):\n        with allure.step(\"Запрос без номера возвращает ошибку\"):\n            create_order_response = get_track_order('')\n            assert create_order_response.status_code == 400, (\n                f\"Ожидался статус код 400, но получили {create_order_response.status_code}. \"\n                f\"Ответ: {create_order_response.text}\")\n>           assert create_order_response.json() == {\"message\":  \"Недостаточно данных для поиска\"}, (\n            f'Ожидался ответ {{\"message\":  \"Недостаточно данных для поиска\"}}, '\n            f'но получили {create_order_response.json()}')\nE           AssertionError: Ожидался ответ {\"message\":  \"Недостаточно данных для поиска\"}, но получили {'code': 400, 'message': 'Недостаточно данных для поиска'}\nE           assert {'code': 400,...х для поиска'} == {'message': '...х для поиска'}\nE             \nE             Omitting 1 identical items, use -vv to show\nE             Left contains 1 more item:\nE             \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m400\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\nE             \nE             Full diff:\nE             \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\nE             \nE             ...Full output truncated (3 lines hidden), use '-vv' to show\n\ntests\\test_place_an_order_using_its_number.py:35: AssertionError","steps":[{"name":"Запрос без номера возвращает ошибку","time":{"start":1760439182397,"stop":1760439182880,"duration":483},"status":"failed","statusMessage":"AssertionError: Ожидался ответ {\"message\":  \"Недостаточно данных для поиска\"}, но получили {'code': 400, 'message': 'Недостаточно данных для поиска'}\nassert {'code': 400,...х для поиска'} == {'message': '...х для поиска'}\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001B[0m{\u001B[33m'\u001B[39;49;00m\u001B[33mcode\u001B[39;49;00m\u001B[33m'\u001B[39;49;00m: \u001B[94m400\u001B[39;49;00m}\u001B[90m\u001B[39;49;00m\n  \n  Full diff:\n  \u001B[0m\u001B[90m \u001B[39;49;00m {\u001B[90m\u001B[39;49;00m...\n  \n  ...Full output truncated (3 lines hidden), use '-vv' to show\n","statusTrace":"  File \"C:\\Users\\ilua2\\project\\qa_Sprint_7\\tests\\test_place_an_order_using_its_number.py\", line 35, in test_get_order_with_empty_track_number\n    assert create_order_response.json() == {\"message\":  \"Недостаточно данных для поиска\"}, (\n    f'Ожидался ответ {{\"message\":  \"Недостаточно данных для поиска\"}}, '\n    f'но получили {create_order_response.json()}')\n","steps":[{"name":"Получение тестовый заказ","time":{"start":1760439182397,"stop":1760439182878,"duration":481},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":1}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":2},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_place_an_order_using_its_number"},{"name":"subSuite","value":"TestCreatingCourier"},{"name":"host","value":"Ilya_Volkov"},{"name":"thread","value":"5776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_place_an_order_using_its_number"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"40149af61b86d215.json","parameterValues":[]}