{"uid":"8f028d1981b269a3","name":"Авторизация с пустыми строками и null значениями","fullName":"tests.test_login_courier.TestLoginCourier#test_login_empty_and_null_values","historyId":"22000181ca1d1f049b4dfa8cc5389518","time":{"start":1760439120072,"stop":1760439180878,"duration":60806},"description":"Тест проверяет авторизацию с пустыми строками и null значениями","descriptionHtml":"<p>Тест проверяет авторизацию с пустыми строками и null значениями</p>\n","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получили 504\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <test_login_courier.TestLoginCourier object at 0x000001D650EB7690>, login = <object object at 0x000001D64CF32C80>, password = <object object at 0x000001D64CF32C80>\nauthorization_cour = <function authorization_cour.<locals>.aut_cour at 0x000001D650FF5440>, create_cour = <function create_cour.<locals>.cre_cour at 0x000001D650FF5EE0>\ndelete_cour = <function delete_cour.<locals>.del_cour at 0x000001D650FF5C60>\n\n    @allure.title('Авторизация с пустыми строками и null значениями')\n    @allure.description('Тест проверяет авторизацию с пустыми строками и null значениями')\n    @pytest.mark.parametrize(\"login,password\", CreateCourier.parameters)\n    def test_login_empty_and_null_values(self, login, password, authorization_cour, create_cour, delete_cour):\n        test_case = f\"login={login}, password={password}\"\n        with allure.step(f\"Тестовый случай: {test_case}\"):\n            with allure.step(\"Создаем курьера\"):\n                _, or_data = create_cour()\n                data = or_data\n                del data[\"firstName\"]\n    \n                data = CreateCourier.invalid_data(data, \"login\", login)\n                data = CreateCourier.invalid_data(data, \"password\", password)\n    \n            with allure.step(\"Отправка запроса и валидация\"):\n                response = authorization_cour(data)\n>               assert response.status_code == 400, f\"Ожидался статус 400, но получили {response.status_code}\"\nE               AssertionError: Ожидался статус 400, но получили 504\nE               assert 504 == 400\nE                +  where 504 = <Response [504]>.status_code\n\ntests\\test_login_courier.py:114: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1760438909140,"stop":1760438909179,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"create_cour","time":{"start":1760439120072,"stop":1760439120072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"delete_cour","time":{"start":1760439120072,"stop":1760439120072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0},{"name":"authorization_cour","time":{"start":1760439120072,"stop":1760439120072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"testStage":{"description":"Тест проверяет авторизацию с пустыми строками и null значениями","status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получили 504\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code","statusTrace":"self = <test_login_courier.TestLoginCourier object at 0x000001D650EB7690>, login = <object object at 0x000001D64CF32C80>, password = <object object at 0x000001D64CF32C80>\nauthorization_cour = <function authorization_cour.<locals>.aut_cour at 0x000001D650FF5440>, create_cour = <function create_cour.<locals>.cre_cour at 0x000001D650FF5EE0>\ndelete_cour = <function delete_cour.<locals>.del_cour at 0x000001D650FF5C60>\n\n    @allure.title('Авторизация с пустыми строками и null значениями')\n    @allure.description('Тест проверяет авторизацию с пустыми строками и null значениями')\n    @pytest.mark.parametrize(\"login,password\", CreateCourier.parameters)\n    def test_login_empty_and_null_values(self, login, password, authorization_cour, create_cour, delete_cour):\n        test_case = f\"login={login}, password={password}\"\n        with allure.step(f\"Тестовый случай: {test_case}\"):\n            with allure.step(\"Создаем курьера\"):\n                _, or_data = create_cour()\n                data = or_data\n                del data[\"firstName\"]\n    \n                data = CreateCourier.invalid_data(data, \"login\", login)\n                data = CreateCourier.invalid_data(data, \"password\", password)\n    \n            with allure.step(\"Отправка запроса и валидация\"):\n                response = authorization_cour(data)\n>               assert response.status_code == 400, f\"Ожидался статус 400, но получили {response.status_code}\"\nE               AssertionError: Ожидался статус 400, но получили 504\nE               assert 504 == 400\nE                +  where 504 = <Response [504]>.status_code\n\ntests\\test_login_courier.py:114: AssertionError","steps":[{"name":"Тестовый случай: login=<object object at 0x000001D64CF32C80>, password=<object object at 0x000001D64CF32C80>","time":{"start":1760439120072,"stop":1760439180877,"duration":60805},"status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получили 504\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code\n","statusTrace":"  File \"C:\\Users\\ilua2\\project\\qa_Sprint_7\\tests\\test_login_courier.py\", line 114, in test_login_empty_and_null_values\n    assert response.status_code == 400, f\"Ожидался статус 400, но получили {response.status_code}\"\n","steps":[{"name":"Создаем курьера","time":{"start":1760439120072,"stop":1760439120544,"duration":472},"status":"passed","steps":[{"name":"Создаем курьера","time":{"start":1760439120072,"stop":1760439120543,"duration":471},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":1},{"name":"Отправка запроса и валидация","time":{"start":1760439120544,"stop":1760439180876,"duration":60332},"status":"failed","statusMessage":"AssertionError: Ожидался статус 400, но получили 504\nassert 504 == 400\n +  where 504 = <Response [504]>.status_code\n","statusTrace":"  File \"C:\\Users\\ilua2\\project\\qa_Sprint_7\\tests\\test_login_courier.py\", line 114, in test_login_empty_and_null_values\n    assert response.status_code == 400, f\"Ожидался статус 400, но получили {response.status_code}\"\n","steps":[{"name":"Авторизуем курьера","time":{"start":1760439120544,"stop":1760439180876,"duration":60332},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":1}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentStep":false,"attachmentsCount":0,"stepsCount":4}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentStep":false,"attachmentsCount":0,"stepsCount":5},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login_courier"},{"name":"subSuite","value":"TestLoginCourier"},{"name":"host","value":"Ilya_Volkov"},{"name":"thread","value":"5776-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login_courier"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"login","value":"<object object at 0x000001D64CF32C80>"},{"name":"password","value":"<object object at 0x000001D64CF32C80>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"8f028d1981b269a3.json","parameterValues":["<object object at 0x000001D64CF32C80>","<object object at 0x000001D64CF32C80>"]}